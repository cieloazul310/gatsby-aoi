name: GitHub Pages

on:
  push:
   branches:
    - main

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  BUILD_PATH: "./starters/gatsby-starter-aoi-theme" # default value when not using subfolders

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          cache-dependency-path: ./package-lock.json
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
        with:
          static_site_generator: gatsby

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            starters/gatsby-starter-aoi-theme/public
            starters/gatsby-starter-aoi-theme/.cache
          key: ${{ runner.os }}-gatsby-build-${{ hashFiles('starters/gatsby-starter-aoi-theme/public') }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build-

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build theme
        run: ${{ steps.detect-package-manager.outputs.manager }} run build

      - name: Build starter
        run: ${{ steps.detect-package-manager.outputs.manager }} run build:starter

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./starters/gatsby-starter-aoi-theme/public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
